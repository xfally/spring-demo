version: '3'
services:

  mysql:
    container_name: mysql-3306
    image: mysql:8.0.21
    networks:
      default:
        aliases:
          - mysql-server
    ports:
      - 3306:3306
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ~/data/docker/mysql-3306/conf.d:/etc/mysql/conf.d
      - ~/data/docker/mysql-3306/data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_USER: test
      MYSQL_PASSWORD: 123456
      MYSQL_DATABASE: test
    restart: 'no'

  postgres:
    container_name: postgres-5432
    image: postgres:10.13
    networks:
      default:
        aliases:
          - postgres-server
    ports:
      - 5432:5432
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ~/data/docker/postgres-5432/data:/var/lib/postgresql/data
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    restart: 'no'

  mongo-primary:
    container_name: mongo-primary-27017
    image: mongo:4.2.9
    networks:
      default:
        aliases:
          - mongo-primary-server
    ports:
      - 27017:27017
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ~/data/docker/mongo-27017/data:/data/db
      - ~/data/docker/mongo-27017/configdb:/data/configdb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456
    command: mongod --dbpath /data/db --bind_ip_all --replSet "rs0" --keyFile /data/configdb/keyfile
    entrypoint:
      - bash
      - -c
      - |
        chmod 400 /data/configdb/keyfile
        chown 999:999 /data/configdb/keyfile
        exec docker-entrypoint.sh $$@
    restart: 'no'

  mongo-arbiter:
    container_name: mongo-arbiter-27018
    image: mongo:4.2.9
    networks:
      default:
        aliases:
          - mongo-arbiter-server
    ports:
      - 27018:27017
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ~/data/docker/mongo-27018/data:/data/db
      - ~/data/docker/mongo-27018/configdb:/data/configdb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456
    command: mongod --dbpath /data/db --bind_ip_all --replSet "rs0" --keyFile /data/configdb/keyfile
    entrypoint:
      - bash
      - -c
      - |
        chmod 400 /data/configdb/keyfile
        chown 999:999 /data/configdb/keyfile
        exec docker-entrypoint.sh $$@
    restart: 'no'

  mongo-secondary:
    container_name: mongo-secondary-27019
    image: mongo:4.2.9
    networks:
      default:
        aliases:
          - mongo-secondary-server
    ports:
      - 27019:27017
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ~/data/docker/mongo-27019/data:/data/db
      - ~/data/docker/mongo-27019/configdb:/data/configdb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 123456
    command: mongod --dbpath /data/db --bind_ip_all --replSet "rs0" --keyFile /data/configdb/keyfile
    entrypoint:
      - bash
      - -c
      - |
        chmod 400 /data/configdb/keyfile
        chown 999:999 /data/configdb/keyfile
        exec docker-entrypoint.sh $$@
    restart: 'no'

  redis:
    container_name: redis-6379
    image: redis:6.0.5
    networks:
      default:
        aliases:
          - redis-server
    ports:
      - 6379:6379
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    restart: 'no'

  rabbitmq:
    container_name: rabbitmq-5672
    image: rabbitmq:management
    networks:
      default:
        aliases:
          - rabbitmq-server
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ~/data/docker/rabbitmq-5672:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    restart: 'no'

  keycloak:
    container_name: keycloak-18080
    image: jboss/keycloak:11.0.1
    networks:
      default:
        aliases:
          - keycloak-server
    ports:
      - 18080:8080
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      DB_VENDOR: mysql
      DB_ADDR: mysql-server
      DB_PORT: 3306
      DB_DATABASE: keycloak
      DB_USER: root
      DB_PASSWORD: 123456
    restart: "no"
    depends_on:
      - mysql

  spring-eureka:
    container_name: spring-eureka-7001
    image: xfally/spring-eureka:latest
    networks:
      default:
        aliases:
          - spring-eureka-server
    ports:
      - 7001:7001
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ~/data/docker/spring-eureka-7001/config:/config
    restart: 'no'

  spring-gateway:
    container_name: spring-gateway-8000
    image: xfally/spring-gateway:latest
    networks:
      default:
        aliases:
          - spring-gateway-server
    ports:
      - 8000:8000
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ~/data/docker/spring-gateway-8000/config:/config
    restart: 'no'

  nacos:
    container_name: nacos-8848
    image: nacos/nacos-server:1.4.0
    networks:
      default:
        aliases:
          - nacos-server
    ports:
      - 8848:8848
      - 9555:9555
    volumes:
      - ~/data/docker/nacos-8848/standalone-logs:/home/nacos/logs
      #- ~/data/docker/nacos-8848/init.d/custom.properties:/home/nacos/init.d/custom.properties
    environment:
      NACOS_AUTH_ENABLE: 'false'
      PREFER_HOST_MODE: hostname
      MODE: standalone
      SPRING_DATASOURCE_PLATFORM: mysql
      MYSQL_SERVICE_HOST: mysql-server
      MYSQL_SERVICE_DB_NAME: nacos
      MYSQL_SERVICE_PORT: 3306
      MYSQL_SERVICE_USER: root
      MYSQL_SERVICE_PASSWORD: 123456
    restart: 'no'
    depends_on:
      - mysql

  spring-demo:
    container_name: spring-demo-8080
    image: xfally/spring-demo:latest
    networks:
      default:
        aliases:
          - spring-demo-server
    ports:
      - 8080:8080
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      - ~/data/docker/spring-demo-8080/config:/config
    restart: 'no'
    depends_on:
      - mysql
      - postgres
      - mongo-primary
      - mongo-arbiter
      - mongo-secondary
      - redis
      - rabbitmq
      - keycloak
      - spring-eureka

networks:
  default:
    driver: bridge
